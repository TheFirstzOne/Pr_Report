// üìä PR Expense Dashboard - Google Apps Script Backend
// ‡∏ß‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÉ‡∏ô Google Apps Script Project

/**
 * üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á Web App ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á PR Dashboard
 */
function doGet() {
  return HtmlService.createTemplateFromFile('dashboard')
    .evaluate()
    .setTitle('PR Expense Monitoring Dashboard')
    .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}

/**
 * üìÅ ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå HTML/CSS/JS ‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô
 */
function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

/**
 * üìä ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß)
 */
function getPRData() {
  try {
    // ‡πÄ‡∏õ‡∏¥‡∏î Google Sheets (‡πÉ‡∏™‡πà ID ‡∏Ç‡∏≠‡∏á Google Sheets ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà)
    const spreadsheet = SpreadsheetApp.openById('189G2MUOTfR1en6_8pjLJ2zP4TKEGQWF4gxNtwkCacj0');
    const sheet = spreadsheet.getSheetByName('PR');
    
    if (!sheet) {
      throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö Sheet ‡∏ä‡∏∑‡πà‡∏≠ "PR"');
    }
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const data = sheet.getDataRange().getValues();
    const headers = data[0];
    const rows = data.slice(1);
    
    console.log(`‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ${rows.length} ‡πÅ‡∏ñ‡∏ß`);
    
    // ‡∏´‡∏≤ index ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    const dateIndex = headers.indexOf('DATE');
    const prNoIndex = headers.indexOf('Pr No.');
    const totalPriceIndex = headers.indexOf('TOTAL PRICE');
    const orderIndex = headers.indexOf('ORDER');
    const qtyIndex = headers.indexOf('QTY.');
    const unitIndex = headers.indexOf('UNIT');
    const statusIndex = headers.indexOf('STATUS');
    const remarkIndex = headers.indexOf('Remark'); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
    
    if (dateIndex === -1 || totalPriceIndex === -1) {
      throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå DATE ‡∏´‡∏£‡∏∑‡∏≠ TOTAL PRICE');
    }
    
    // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const processedData = [];
    const monthlyData = {};
    const allPRs = [];
    const uniquePRNumbers = new Set(); // ‡πÄ‡∏Å‡πá‡∏ö PR No. ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
    
    rows.forEach((row, index) => {
      // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
      const validation = validateRowData(row, headers);
      if (!validation.valid) {
        console.log(`‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏ñ‡∏ß ${index + 2}: ${validation.reason}`);
        return;
      }
      
      const { date: dateObj, totalPrice, prNo } = validation.data;
      const status = row[statusIndex] ? row[statusIndex].toString().toLowerCase().trim() : '';
      
      // ‡∏Ç‡πâ‡∏≤‡∏° PR ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ operate ‡∏´‡∏£‡∏∑‡∏≠ cancel
      if (status === 'operate' || status === 'cancel' || status === 'cancelled') {
        console.log(`‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏ñ‡∏ß ${index + 2}: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ${status}`);
        return;
      }
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á key ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)
      const monthNames = [
        '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', 
        '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô', '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°',
        '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
      ];
      
      const monthKey = `${monthNames[dateObj.getMonth()]} ${dateObj.getFullYear()}`;
      
      // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
      if (!monthlyData[monthKey]) {
        monthlyData[monthKey] = {
          month: monthKey,
          totalExpense: 0,
          recordCount: 0,
          activeRecordCount: 0,
          maxExpense: 0,
          uniquePRCount: 0,
          monthlyUniquePRs: new Set()
        };
      }
      
      monthlyData[monthKey].totalExpense += totalPrice;
      monthlyData[monthKey].recordCount += 1;
      monthlyData[monthKey].activeRecordCount += 1;
      monthlyData[monthKey].maxExpense = Math.max(monthlyData[monthKey].maxExpense, totalPrice);
      
      // ‡πÄ‡∏Å‡πá‡∏ö PR ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ operate/cancel) - ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡πâ PR No. ‡∏à‡∏∞‡∏ã‡πâ‡∏≥
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° PR No. ‡πÉ‡∏ô‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏ö unique
      if (prNo) {
        uniquePRNumbers.add(prNo);
        monthlyData[monthKey].monthlyUniquePRs.add(prNo);
      }
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PR ‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß
      const prData = formatPRData(row, headers, index, monthKey, validation.data);
      allPRs.push(prData);
      
      processedData.push({
        date: dateObj,
        totalPrice: totalPrice,
        month: monthKey
      });
    });
    
    // *** ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≤‡∏° PR No. (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Error) ***
    allPRs.sort((a, b) => {
      // ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏Å‡πà‡∏≤ ‚Üí ‡πÉ‡∏´‡∏°‡πà)
      const dateA = new Date(a.date);
      const dateB = new Date(b.date);
      
      if (dateA.getTime() !== dateB.getTime()) {
        return dateA.getTime() - dateB.getTime(); // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏°‡∏≤‡∏Å
      }
      
      // ‡∏ñ‡πâ‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö PR No. (‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏°‡∏≤‡∏Å)
      // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ .replace()
      function getPRNumber(prNo) {
        if (!prNo || typeof prNo !== 'string') {
          return 0; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà string ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô null/undefined
        }
        return parseInt(prNo.replace(/[^0-9]/g, '')) || 0;
      }
      
      const prNoA = getPRNumber(a.prNo);
      const prNoB = getPRNumber(b.prNo);
      
      return prNoA - prNoB; // PR No. ‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏°‡∏≤‡∏Å
    });
    
    // ‡∏•‡∏ö dateObj ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å allPRs ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á frontend
    allPRs.forEach(pr => {
      delete pr.dateObj;
    });
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô Array ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö
    const monthlySummary = Object.values(monthlyData).sort((a, b) => {
      const monthOrder = [
        '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', 
        '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô', '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°',
        '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
      ];
      
      const aMonth = a.month.split(' ')[0];
      const bMonth = b.month.split(' ')[0];
      const aYear = parseInt(a.month.split(' ')[1]);
      const bYear = parseInt(b.month.split(' ')[1]);
      
      if (aYear !== bYear) return aYear - bYear;
      return monthOrder.indexOf(aMonth) - monthOrder.indexOf(bMonth);
    });
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô unique PR ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏•‡∏ö Set ‡∏≠‡∏≠‡∏Å (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ error ‡πÉ‡∏ô JSON)
    monthlySummary.forEach(month => {
      month.uniquePRCount = month.monthlyUniquePRs.size;
      delete month.monthlyUniquePRs; // ‡∏•‡∏ö Set ‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ serialize ‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÑ‡∏î‡πâ
    });
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
    const totalExpense = monthlySummary.reduce((sum, month) => sum + month.totalExpense, 0);
    monthlySummary.forEach(month => {
      month.percentage = totalExpense > 0 ? (month.totalExpense / totalExpense * 100) : 0;
    });
    
    const result = {
      monthlySummary: monthlySummary,
      allPRs: allPRs,
      totalRecords: processedData.length,
      totalExpense: totalExpense,
      uniquePRCount: uniquePRNumbers.size, // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô PR ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
      dateRange: {
        min: processedData.length > 0 ? Math.min(...processedData.map(d => d.date.getTime())) : null,
        max: processedData.length > 0 ? Math.max(...processedData.map(d => d.date.getTime())) : null
      }
    };
    
    console.log('‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', {
      totalRecords: result.totalRecords,
      monthlyCount: result.monthlySummary.length,
      allPRsCount: result.allPRs.length,
      uniquePRCount: result.uniquePRCount,
      totalExpense: result.totalExpense,
      sortingInfo: `‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (${result.allPRs[0]?.date}) ‚Üí (${result.allPRs[result.allPRs.length-1]?.date})`
    });
    
    return result;
    
  } catch (error) {
    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.toString());
    return {
      error: error.toString(),
      monthlySummary: [],
      allPRs: [],
      totalRecords: 0,
      totalExpense: 0,
      uniquePRCount: 0
    };
  }
}

/**
 * üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Error)
 */
function validateRowData(row, headers) {
  const dateIndex = headers.indexOf('DATE');
  const prNoIndex = headers.indexOf('Pr No.');
  const totalPriceIndex = headers.indexOf('TOTAL PRICE');
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
  const date = row[dateIndex];
  const totalPrice = row[totalPriceIndex];
  const prNo = row[prNoIndex];
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (!date) {
    return { valid: false, reason: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà' };
  }
  
  if (totalPrice === null || totalPrice === undefined || totalPrice === '') {
    return { valid: false, reason: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤' };
  }
  
  const parsedPrice = parseFloat(totalPrice);
  if (isNaN(parsedPrice)) {
    return { valid: false, reason: '‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç' };
  }
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  let dateObj;
  if (date instanceof Date) {
    dateObj = date;
  } else {
    dateObj = new Date(date);
  }
  
  if (isNaN(dateObj.getTime())) {
    return { valid: false, reason: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' };
  }
  
  return { 
    valid: true, 
    data: {
      date: dateObj,
      totalPrice: parsedPrice,
      prNo: prNo ? String(prNo) : null
    }
  };
}

/**
 * üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PR (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Error + ‡πÄ‡∏û‡∏¥‡πà‡∏° Remark)
 */
function formatPRData(row, headers, index, monthKey, validatedData) {
  const orderIndex = headers.indexOf('ORDER');
  const qtyIndex = headers.indexOf('QTY.');
  const unitIndex = headers.indexOf('UNIT');
  const statusIndex = headers.indexOf('STATUS');
  const remarkIndex = headers.indexOf('Remark'); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
  
  // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß
  const { date: dateObj, totalPrice, prNo } = validatedData;
  
  return {
    prNo: prNo || `NO_PR_${index + 2}`,
    amount: totalPrice,
    date: Utilities.formatDate(dateObj, Session.getScriptTimeZone(), 'yyyy-MM-dd'),
    month: monthKey,
    item: row[orderIndex] ? String(row[orderIndex]) : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
    qty: row[qtyIndex] ? String(row[qtyIndex]) : '',
    unit: row[unitIndex] ? String(row[unitIndex]) : '',
    status: row[statusIndex] ? String(row[statusIndex]) : 'PENDING',
    remark: row[remarkIndex] ? String(row[remarkIndex]) : '', // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
    rowIndex: index + 2
  };
}

/**
 * üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Error)
 */
function formatNumber(num) {
  if (typeof num !== 'number' || isNaN(num)) return '0';
  return num.toLocaleString('th-TH', { 
    minimumFractionDigits: 0, 
    maximumFractionDigits: 0 
  });
}

/**
 * üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏á‡∏¥‡∏ô (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Error)
 */
function formatCurrency(num) {
  if (typeof num !== 'number' || isNaN(num)) return '0 ‡∏ø';
  return num.toLocaleString('th-TH', { 
    minimumFractionDigits: 0, 
    maximumFractionDigits: 0 
  }) + ' ‡∏ø';
}

/**
 * üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
 */
function testRemarkColumn() {
  console.log('=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ ===');
  
  try {
    const spreadsheet = SpreadsheetApp.openById('189G2MUOTfR1en6_8pjLJ2zP4TKEGQWF4gxNtwkCacj0');
    const sheet = spreadsheet.getSheetByName('PR');
    
    if (!sheet) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Sheet ‡∏ä‡∏∑‡πà‡∏≠ "PR"');
      return false;
    }
    
    const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
    const remarkIndex = headers.indexOf('Remark');
    
    console.log('üìã Headers ‡∏ó‡∏µ‡πà‡∏û‡∏ö:', headers);
    console.log(`üìù ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Remark: ${remarkIndex >= 0 ? `‚úÖ ‡∏û‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ${remarkIndex + 1}` : '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö'}`);
    
    if (remarkIndex >= 0) {
      // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Remark ‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
      const sampleData = sheet.getRange(2, 1, Math.min(5, sheet.getLastRow() - 1), sheet.getLastColumn()).getValues();
      
      console.log('üìÑ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Remark:');
      sampleData.forEach((row, index) => {
        const remark = row[remarkIndex];
        console.log(`  ‡πÅ‡∏ñ‡∏ß ${index + 2}: "${remark || '(‡∏ß‡πà‡∏≤‡∏á)'}" - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${typeof remark}`);
      });
      
      return true;
    }
    
    return false;
    
  } catch (error) {
    console.error('‚ùå Error ‡πÉ‡∏ô testRemarkColumn:', error.toString());
    return false;
  }
}

/**
 * üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug)
 */
function testGetPRData() {
  const data = getPRData();
  console.log('‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:', JSON.stringify(data, null, 2));
  return data;
}

/**
 * üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç TypeError
 */
function testErrorHandling() {
  console.log('=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç TypeError ===');
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î error
  const testData = [
    { prNo: null, expected: 0 },
    { prNo: undefined, expected: 0 },
    { prNo: "", expected: 0 },
    { prNo: "PR001", expected: 1 },
    { prNo: "PR-123", expected: 123 },
    { prNo: "ABC456", expected: 456 },
    { prNo: 789, expected: 789 },
    { prNo: "NO-NUMBER", expected: 0 }
  ];
  
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  function getPRNumber(prNo) {
    if (!prNo || typeof prNo !== 'string') {
      return 0;
    }
    return parseInt(prNo.replace(/[^0-9]/g, '')) || 0;
  }
  
  let allPassed = true;
  
  testData.forEach((test, index) => {
    try {
      const result = getPRNumber(test.prNo);
      const passed = result === test.expected;
      
      console.log(`Test ${index + 1}: ${passed ? '‚úÖ' : '‚ùå'} prNo: ${test.prNo} ‚Üí ${result} (expected: ${test.expected})`);
      
      if (!passed) {
        allPassed = false;
      }
    } catch (error) {
      console.log(`Test ${index + 1}: ‚ùå ERROR - ${error.message}`);
      allPassed = false;
    }
  });
  
  if (allPassed) {
    console.log('‚úÖ ‡∏ó‡∏∏‡∏Å Test ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß - TypeError ‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
  } else {
    console.log('‚ùå ‡∏ö‡∏≤‡∏á Test ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô - ‡∏¢‡∏±‡∏á‡∏°‡∏µ Error');
  }
  
  return { allPassed, testResults: testData };
}

/**
 * üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö PR
 */
function testPRSorting() {
  const data = getPRData();
  
  if (data.allPRs && data.allPRs.length > 0) {
    console.log('=== ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö PR ===');
    console.log('‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å:');
    
    data.allPRs.slice(0, 10).forEach((pr, index) => {
      console.log(`${index + 1}. ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${pr.date}, PR No.: ${pr.prNo}, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${formatCurrency(pr.amount)}`);
    });
    
    console.log('\n‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ 10 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:');
    data.allPRs.slice(-10).forEach((pr, index) => {
      const actualIndex = data.allPRs.length - 10 + index + 1;
      console.log(`${actualIndex}. ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${pr.date}, PR No.: ${pr.prNo}, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${formatCurrency(pr.amount)}`);
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö
    let sortingCorrect = true;
    for (let i = 1; i < data.allPRs.length; i++) {
      const current = data.allPRs[i];
      const previous = data.allPRs[i - 1];
      
      const currentDate = new Date(current.date);
      const previousDate = new Date(previous.date);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
      if (currentDate < previousDate) {
        sortingCorrect = false;
        console.error(`‚ùå ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ú‡∏¥‡∏î ‡∏ó‡∏µ‡πà index ${i}: ${previous.date} > ${current.date}`);
        break;
      }
      
      // ‡∏ñ‡πâ‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PR No.
      if (currentDate.getTime() === previousDate.getTime()) {
        // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ .replace()
        function getPRNumber(prNo) {
          if (!prNo || typeof prNo !== 'string') {
            return 0;
          }
          return parseInt(prNo.replace(/[^0-9]/g, '')) || 0;
        }
        
        const currentPRNo = getPRNumber(current.prNo);
        const previousPRNo = getPRNumber(previous.prNo);
        
        if (currentPRNo < previousPRNo) {
          sortingCorrect = false;
          console.error(`‚ùå ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö PR No. ‡∏ú‡∏¥‡∏î ‡∏ó‡∏µ‡πà index ${i}: ${previous.prNo} > ${current.prNo}`);
          break;
        }
      }
    }
    
    if (sortingCorrect) {
      console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÄ‡∏Å‡πà‡∏≤ ‚Üí ‡πÉ‡∏´‡∏°‡πà) ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≤‡∏° PR No. (‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏°‡∏≤‡∏Å)');
    }
    
    return {
      totalPRs: data.allPRs.length,
      uniquePRs: data.uniquePRCount,
      sortingCorrect: sortingCorrect,
      firstPR: data.allPRs[0],
      lastPR: data.allPRs[data.allPRs.length - 1]
    };
  }
  
  return { error: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PR' };
}

/**
 * üöÄ Deploy Web App - ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
 * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£ Deploy:
 * 1. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
 * 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå HTML ‡∏ä‡∏∑‡πà‡∏≠ "dashboard" ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î Frontend ‡πÑ‡∏õ‡πÉ‡∏™‡πà
 * 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ:
 *    - testRemarkColumn() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏´‡∏°‡πà
 *    - testErrorHandling() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç TypeError
 *    - testGetPRData() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 *    - testPRSorting() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö
 * 4. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Deploy > New Deployment
 * 5. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Type: Web app
 * 6. Execute as: Me
 * 7. Who has access: Anyone
 * 8. ‡∏Ñ‡∏•‡∏¥‡∏Å Deploy
 * 9. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö URL ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
 * 
 * ‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
 * - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "Remark" ‡πÉ‡∏ô Google Sheets
 * - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Remark ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á "-" ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
 * - ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö truncate ‡∏û‡∏£‡πâ‡∏≠‡∏° tooltip
 * - ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô 7 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏ó‡∏ô 6 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏î‡∏¥‡∏°
 */

/**
 * üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï + ‡πÄ‡∏û‡∏¥‡πà‡∏° Remark)
 */
function getUsageInfo() {
  return {
    version: '2.1 - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏',
    sheetId: '189G2MUOTfR1en6_8pjLJ2zP4TKEGQWF4gxNtwkCacj0',
    sheetName: 'PR',
    requiredColumns: [
      'DATE',        // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
      'Pr No.',      // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç PR
      'TOTAL PRICE', // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
      'ORDER',       // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      'QTY.',        // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
      'UNIT',        // ‡∏´‡∏ô‡πà‡∏ß‡∏¢
      'STATUS',      // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      'Remark'       // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡πÉ‡∏´‡∏°‡πà)
    ],
    excludedStatuses: ['operate', 'cancel', 'cancelled'],
    sortingLogic: [
      '1. ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÄ‡∏Å‡πà‡∏≤ ‚Üí ‡πÉ‡∏´‡∏°‡πà)',
      '2. PR No. (‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏°‡∏≤‡∏Å) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô'
    ],
    errorHandling: [
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ .replace()',
      '‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô string ‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•',
      '‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô null/undefined values',
      '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ validate ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï'
    ],
    features: [
      '‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞',
      '‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ',
      '‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢',
      '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥',
      'Responsive design',
      'Error handling ‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á',
      '‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Remark' // ‡πÉ‡∏´‡∏°‡πà
    ],
    testFunctions: [
      'testGetPRData() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
      'testPRSorting() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö',
      'testErrorHandling() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç TypeError',
      'testRemarkColumn() - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡πÉ‡∏´‡∏°‡πà)'
    ]
  };
}
